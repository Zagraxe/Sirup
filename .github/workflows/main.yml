name: Run Discord Bot

on:
  push:
    branches:
      - main
  schedule:  # Planification automatique toutes les 5 heures
    - cron: "0 */5 * * *"  # Exécute le workflow automatiquement toutes les 5 heures

concurrency:
  group: bot-actions
  cancel-in-progress: true

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run bot
      run: |
        echo DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }} >> .env
        echo DISCORD_IA_TOKEN=${{ secrets.DISCORD_IA_TOKEN }} >> .env
        python citations/citations.py &       # Lance citations.py en arrière-plan
        python Règlement/reglement.py &       # Lance reglement.py en arrière-plan
        python shifumi/shifumi.py &           # Lance shifumi.py en arrière-plan
        python bienvenu/bienvenu.py &         # Lance bienvenu.py en arrière-plan
        
        # Intégration de l'IA et des messages automatiques
        python -c "
import os
import asyncio
from discord.ext import commands
from ia import obtenir_reponse
import discord

# Initialisation du bot
intents = discord.Intents.default()
intents.messages = True
bot = commands.Bot(command_prefix='!', intents=intents)

# ID du salon de test
TEST_CHANNEL_ID = 123456789012345678  # Remplace avec l'ID réel de ton salon de test

# Tâche périodique d'envoi de messages
async def envoyer_message_periodique():
    await bot.wait_until_ready()
    channel = bot.get_channel(TEST_CHANNEL_ID)
    if channel:
        await channel.send(\"Nobles âmes, quelqu'un souhaite-t-il discuter ? ⚔️\")

bot.loop.create_task(envoyer_message_periodique())

# Gestion des mentions pour répondre avec l'IA
@bot.event
async def on_message(message):
    if bot.user in message.mentions:  # Si le bot est mentionné
        prompt = f\"Tu es Sirup, un chevalier médiéval. Réponds avec courtoisie : {message.content}\"
        reponse = obtenir_reponse(prompt)
        await message.channel.send(reponse)

bot.run(os.getenv('DISCORD_BOT_TOKEN'))
        "
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_IA_TOKEN: ${{ secrets.DISCORD_IA_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
